/**
 * This file defines simple utility types that are used for other operations
 */

/**
 * Represents a model that is being dragged and its coordinates, or a lack of drag
 */
export interface Coordinates {
  x: number;
  y: number;
}

/**
 * A Universally Unique Identifier, as generated by the uuid library
 */
export type UUID = string;

/**
 * A path on disk
 */
export type Path = string;

/**
 * Defines what kind of error something is
 */
export enum ErrorKind {
  StateRejection
}

/**
 * A custom error type, used for reporting errors in the result type below
 */
export interface Error {
  errorKind: ErrorKind;
  message: string;
}

/**
 * A result type, as in Haskell or Rust. Used to either produce a value or fail with a given error
 */
export type Result<T> = T | Error;
